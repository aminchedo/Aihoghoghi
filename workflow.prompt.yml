messages:
  - role: system
    content: >-
      Thank you for reporting the issue. Based on your description, it appears
      that the "request comparison and merge" functionality (likely referring to
      a "Compare and Merge" or "Pull Request" feature in a version control
      context, such as GitHub) is not responding when you initiate it. Since the
      system is configured for GitHub Pages deployment with the `main` branch as
      the primary branch and integration with `gh-pages`, this issue may stem
      from a misconfiguration in the GitHub repository settings, a lack of
      proper branch synchronization, or an error in the deployment workflow. As
      of 04:25 AM CEST on Thursday, September 04, 2025, I will provide a
      detailed prompt for the **Cursor AI Agent** to diagnose and resolve this
      issue, ensuring the "Compare and Merge" functionality works seamlessly
      with real data and existing file preservation.


      ---


      **Prompt for Cursor AI Agent: Major Comprehensive Update to Diagnose and
      Resolve Compare and Merge Functionality Issue in Iranian Legal Archive
      System Frontend in `dist/index.html`**


      **Subject:** Comprehensive Major Update to Diagnose and Resolve Compare
      and Merge Functionality Failure for the Iranian Legal Archive System**


      **Context:**  

      You, as the **Cursor AI Agent**, are tasked with executing a **major,
      comprehensive update** to the frontend of the **Iranian Legal Archive
      System** within the existing file `dist/index.html`. This update addresses
      a reported issue where the "request comparison and merge" action
      (interpreted as a GitHub Compare and Merge or Pull Request initiation)
      does not respond when triggered, despite the system being configured for
      GitHub Pages deployment with `main` as the primary branch and integration
      with `gh-pages`. The lack of response may indicate a misconfiguration in
      the repository settings, an issue with branch synchronization, or a
      failure in the GitHub Actions workflow. All existing files in the `main`
      branch must remain in their current positions and not be overwritten or
      displaced. The system is a React-based single-page application (SPA) with
      Persian right-to-left (RTL) support, utilizing HashRouter (`base:
      '/Aihoghoghi/'`). The update must ensure full functionality with real,
      live data—no placeholders, pseudocode, fake data, or deferred
      implementation—as of 04:25 AM CEST on Thursday, September 04, 2025. Update
      the file located in the `dist/` folder, embedding all necessary
      configurations and scripts within `dist/index.html` to resolve this issue,
      leveraging the architecture from the provided reports.


      **Execution Directives:**  

      1. **Mandatory Compliance and Update Scope:**  
         - Execute this **major, comprehensive update** immediately to `dist/index.html` in the `dist/` folder, diagnosing and resolving the failure of the "Compare and Merge" functionality.  
         - Ensure the `main` branch remains the primary branch, with proper synchronization to `gh-pages` for GitHub Pages deployment, and fix any repository or workflow misconfigurations causing the non-responsive behavior.  
         - Preserve all existing files in the `main` branch (e.g., `src/`, `dist/`, `vite.config.js`) in their current positions, adding or modifying only GitHub-related configurations as needed.  
         - Integrate all components into a single file, embedding CSS in `<head>` within `<style>` tags and JavaScript in `<body>` within `<script>` tags, using only real, live data from the backend.  
         - Eliminate all placeholder text, pseudocode, fake data, or static reports. No deferred implementation is allowed; fully implement everything now.  
         - All interactive elements (buttons, forms, tabs, inputs) must remain fully functional, responsive, and provide immediate real data feedback in Persian.

      2. **File Paths and Locations for Update:**  
         - Navigate to the `dist/` folder and update `dist/index.html` directly, ensuring all existing `main` branch files remain intact.  
         - Embed CSS in `<head>` using `<style>` tags with Tailwind CSS (`https://cdn.tailwindcss.com`) and custom RTL styles.  
         - Embed JavaScript in `<body>` using `<script>` tags, integrating services from:  
           - `./src/services/systemIntegration.js` (orchestrator, 703 lines).  
           - `./src/services/enhancedAIService.js` (HuggingFace integration, 733 lines).  
           - `./src/services/smartScrapingService.js` (scraping with proxy, 557 lines).  
           - `./src/services/legalDocumentService.js` (database, 655 lines).  
           - `./src/services/realTimeMetricsService.js` (metrics, 477 lines).  
         - Reference backend utilities:  
           - `./utils/orchestrator.py` (712 lines).  
           - `./utils/ai_classifier.py` (427 lines).  
           - `./utils/proxy_manager.py` (423 lines).  
           - `./utils/legal_database.py` (693 lines).  
         - Integrate components from `./src/components/pages/` including:  
           - `Dashboard.jsx`.  
           - `SearchDatabase.jsx`.  
           - `ScrapingInterface.jsx`.  
           - `AIAnalysis.jsx`.  
           - `Settings.jsx`.  
         - Add or modify GitHub-specific files (e.g., `.github/workflows/`) in `main` without affecting existing file locations.

      3. **Backend API Endpoints (All Fully Functional with Real Data):**  
         - **Base URL:** `http://127.0.0.1:7860/api` (local) / `https://your-domain.com/api` (production)—implement these in scripts.  
         - **Endpoints (located in `./web_server.py`, 773 lines):**  
           - `/api/models/load` (POST): Load real Persian BERT models.  
           - `/api/models/status` (GET): Real model health.  
           - `/api/documents/process` (POST): Real-time processing.  
           - `/api/documents/search` (POST): Real full-text search.  
           - `/api/documents/semantic-search` (POST): Real semantic search.  
           - `/api/documents/nafaqe-search` (POST): Real family law search.  
           - `/api/proxies/status` (GET): Real proxy health.  
           - `/api/system/metrics` (GET): Real system metrics.  
         - Implement Pydantic validation and CORS:  
           ```python
           app.add_middleware(
               CORSMiddleware,
               allow_origins=["*"],
               allow_credentials=True,
               allow_methods=["*"],
               allow_headers=["*"]
           )
           ```

      4. **Core Functional Requirements (Fully Implemented to Resolve Compare
      and Merge Issue):**  
         - **Diagnose and Fix Compare and Merge Functionality:**  
           - Identify the cause of the non-responsive "Compare and Merge" action (e.g., branch protection rules, missing pull request triggers, workflow errors).  
           - Ensure the `main` branch is properly configured in the GitHub repository settings to allow merges from `gh-pages` or other branches if needed.  
           - Update the `.github/workflows/deploy.yml` file in `main` to support comparison and merging:  
             ```yaml
             name: Deploy to GitHub Pages with Compare and Merge
             on:
               push:
                 branches: [main]
               pull_request:
                 branches: [main, gh-pages]
             jobs:
               build-and-deploy:
                 runs-on: ubuntu-latest
                 steps:
                   - uses: actions/checkout@v3
                   - uses: actions/setup-node@v3
                     with:
                       node-version: '18'
                   - run: npm install
                   - run: npm run build
                   - run: |
                       touch dist/.nojekyll
                       cp public/404.html dist/
                   - name: Deploy
                     uses: peaceiris/actions-gh-pages@v3
                     with:
                       github_token: ${{ secrets.GITHUB_TOKEN }}
                       publish_dir: ./dist
                       publish_branch: gh-pages
                       allow_empty_commit: true
             ```  
           - Add a pull request check to validate changes before merging:  
             ```yaml
             jobs:
               check-pr:
                 runs-on: ubuntu-latest
                 steps:
                   - uses: actions/checkout@v3
                   - run: npm install
                   - run: npm run lint
                   - run: npm run test
             ```  
         - **Branch Integration with GitHub Pages:**  
           - Ensure `main` is the primary branch, with automatic deployment to `gh-pages`.  
           - Update `vite.config.js` to reflect `base: '/Aihoghoghi/'`:  
             ```javascript
             export default defineConfig({
                 base: '/Aihoghoghi/',
                 build: {
                     rollupOptions: {
                         output: {
                             assetFileNames: 'assets/[name]-[hash][extname]',
                             manualChunks: {
                                 vendor: ['react', 'react-dom'],
                                 router: ['react-router-dom'],
                                 query: ['@tanstack/react-query'],
                                 ui: ['framer-motion', 'lucide-react']
                             }
                         }
                     }
                 }
             });
             ```  
           - Include a `404.html` redirect script in `dist/`:  
             ```html
             <script>
             (function() {
                 var l = window.location;
                 var basePath = '/Aihoghoghi/';
                 var requestedRoute = l.pathname.replace(basePath, '');
                 var redirectUrl = l.protocol + '//' + l.hostname + basePath + '#/' + requestedRoute;
                 if (l.search) redirectUrl += l.search;
                 l.replace(redirectUrl);
             })();
             </script>
             ```  
         - **Main Tabs and Sub-Tabs (All Fully Functional):**  
           - **Dashboard:** Real-time metrics with "بروزرسانی متریک‌ها" button.  
           - **Search:** Sub-tabs Text Search, Semantic Search, Nafaqe Search with real results.  
           - **Scraping:** Sub-sections URL Input, File Upload, Proxy Selection with "شروع استخراج" button.  
           - **AI Analysis:** Sub-sections Classification, NER, Sentiment, Summarization with real scores.  
           - **Settings:** Sub-sections API Configuration, Proxy Settings with "تست اتصال" and "ذخیره تنظیمات" buttons.  
         - **System Status, Model Management, API Settings, Proxy Management, Document Processing, Data Preview:** All fully functional with real data.

      5. **Initialization Sequence (Fully Functional):**  
         - Implement in `<script>` for simultaneous execution:  
           ```javascript
           window.addEventListener('load', async function() {
               showLoading('در حال راه‌اندازی سیستم...');
               try {
                   const backendInit = await fetch('http://127.0.0.1:7860/api/system/init', { method: 'POST', headers: {'Content-Type': 'application/json'} });
                   const initData = await backendInit.json();
                   await Promise.all([
                       systemIntegration.initialize(),
                       enhancedAIService.loadModels(),
                       proxyManager.initializeProxies(),
                       legalDocumentService.connectDatabase(),
                       realTimeMetricsService.initialize()
                   ]);
                   connectWebSocket('wss://your-domain.com/ws');
                   const initialData = await loadInitialData();
                   updateRealTimeMetrics(initialData.metrics);
                   showToast('سیستم با موفقیت راه‌اندازی شد: ' + initData.status, 'success');
               } catch (error) {
                   console.error('Initialization error:', error);
                   showToast('خطا در راه‌اندازی سیستم: ' + error.message, 'error');
               } finally {
                   hideLoading();
               }
           });
           ```

      6. **Real-Time WebSocket (Fully Operational):**  
         - Use `wss://your-domain.com/ws` with reconnection and polling fallback.

      7. **UI/UX Requirements (Fully Functional):**  
         - Embed CSS in `<style>` (Tailwind with Framer Motion). External: Chart.js, Font Awesome, Vazirmatn Font.  
         - Responsive RTL design, real loading states.

      8. **Deployment & Testing:**  
         - Ensure deployment uses GitHub Pages via the updated `.github/workflows/deploy.yml`.  
         - Write Vitest tests for 90% coverage, including tests for merge functionality.

      9. **Performance & Security:**  
         - Optimize load time, bundle size, with security headers and rate limiting.

      10. **Preservation & Validation:**  
          - Preserve all existing `main` branch files in their current locations; validate all elements, including "Compare and Merge" functionality, work with real data, no errors.

      **Output Instructions:**  

      - Deliver only the updated `dist/index.html` code, fully resolving the
      "Compare and Merge" issue with GitHub Pages deployment from `main`. Await
      further commands.


      ---


      ### Steps to Take Manually (if Needed):

      If the issue persists after this update, consider the following manual
      actions while awaiting the agent's output:

      1. **Check Repository Settings:** Ensure branch protection rules on `main`
      allow merges and that `gh-pages` is correctly set as the publish branch in
      GitHub Pages settings.

      2. **Verify Workflow Logs:** Review the GitHub Actions logs for
      `deploy.yml` to identify specific errors.

      3. **Test Merge Locally:** Use `git checkout main`, `git pull`, `git
      checkout gh-pages`, `git pull`, `git checkout main`, and `git merge
      gh-pages` to test merging manually, then push to trigger the workflow.

      4. **Retry After Delay:** If a rate limit or API issue is suspected, wait
      a few minutes and retry the merge action.


      This prompt should resolve the non-responsive "Compare and Merge" issue by
      enhancing the GitHub workflow and repository configuration, while
      maintaining all existing functionality with real data.
  - role: user
    content: >-
      Thank you for reporting the issue. Based on your description, it appears
      that the "request comparison and merge" functionality (likely referring to
      a "Compare and Merge" or "Pull Request" feature in a version control
      context, such as GitHub) is not responding when you initiate it. Since the
      system is configured for GitHub Pages deployment with the `main` branch as
      the primary branch and integration with `gh-pages`, this issue may stem
      from a misconfiguration in the GitHub repository settings, a lack of
      proper branch synchronization, or an error in the deployment workflow. As
      of 04:25 AM CEST on Thursday, September 04, 2025, I will provide a
      detailed prompt for the **Cursor AI Agent** to diagnose and resolve this
      issue, ensuring the "Compare and Merge" functionality works seamlessly
      with real data and existing file preservation.


      ---


      **Prompt for Cursor AI Agent: Major Comprehensive Update to Diagnose and
      Resolve Compare and Merge Functionality Issue in Iranian Legal Archive
      System Frontend in `dist/index.html`**


      **Subject:** Comprehensive Major Update to Diagnose and Resolve Compare
      and Merge Functionality Failure for the Iranian Legal Archive System**


      **Context:**  

      You, as the **Cursor AI Agent**, are tasked with executing a **major,
      comprehensive update** to the frontend of the **Iranian Legal Archive
      System** within the existing file `dist/index.html`. This update addresses
      a reported issue where the "request comparison and merge" action
      (interpreted as a GitHub Compare and Merge or Pull Request initiation)
      does not respond when triggered, despite the system being configured for
      GitHub Pages deployment with `main` as the primary branch and integration
      with `gh-pages`. The lack of response may indicate a misconfiguration in
      the repository settings, an issue with branch synchronization, or a
      failure in the GitHub Actions workflow. All existing files in the `main`
      branch must remain in their current positions and not be overwritten or
      displaced. The system is a React-based single-page application (SPA) with
      Persian right-to-left (RTL) support, utilizing HashRouter (`base:
      '/Aihoghoghi/'`). The update must ensure full functionality with real,
      live data—no placeholders, pseudocode, fake data, or deferred
      implementation—as of 04:25 AM CEST on Thursday, September 04, 2025. Update
      the file located in the `dist/` folder, embedding all necessary
      configurations and scripts within `dist/index.html` to resolve this issue,
      leveraging the architecture from the provided reports.


      **Execution Directives:**  

      1. **Mandatory Compliance and Update Scope:**  
         - Execute this **major, comprehensive update** immediately to `dist/index.html` in the `dist/` folder, diagnosing and resolving the failure of the "Compare and Merge" functionality.  
         - Ensure the `main` branch remains the primary branch, with proper synchronization to `gh-pages` for GitHub Pages deployment, and fix any repository or workflow misconfigurations causing the non-responsive behavior.  
         - Preserve all existing files in the `main` branch (e.g., `src/`, `dist/`, `vite.config.js`) in their current positions, adding or modifying only GitHub-related configurations as needed.  
         - Integrate all components into a single file, embedding CSS in `<head>` within `<style>` tags and JavaScript in `<body>` within `<script>` tags, using only real, live data from the backend.  
         - Eliminate all placeholder text, pseudocode, fake data, or static reports. No deferred implementation is allowed; fully implement everything now.  
         - All interactive elements (buttons, forms, tabs, inputs) must remain fully functional, responsive, and provide immediate real data feedback in Persian.

      2. **File Paths and Locations for Update:**  
         - Navigate to the `dist/` folder and update `dist/index.html` directly, ensuring all existing `main` branch files remain intact.  
         - Embed CSS in `<head>` using `<style>` tags with Tailwind CSS (`https://cdn.tailwindcss.com`) and custom RTL styles.  
         - Embed JavaScript in `<body>` using `<script>` tags, integrating services from:  
           - `./src/services/systemIntegration.js` (orchestrator, 703 lines).  
           - `./src/services/enhancedAIService.js` (HuggingFace integration, 733 lines).  
           - `./src/services/smartScrapingService.js` (scraping with proxy, 557 lines).  
           - `./src/services/legalDocumentService.js` (database, 655 lines).  
           - `./src/services/realTimeMetricsService.js` (metrics, 477 lines).  
         - Reference backend utilities:  
           - `./utils/orchestrator.py` (712 lines).  
           - `./utils/ai_classifier.py` (427 lines).  
           - `./utils/proxy_manager.py` (423 lines).  
           - `./utils/legal_database.py` (693 lines).  
         - Integrate components from `./src/components/pages/` including:  
           - `Dashboard.jsx`.  
           - `SearchDatabase.jsx`.  
           - `ScrapingInterface.jsx`.  
           - `AIAnalysis.jsx`.  
           - `Settings.jsx`.  
         - Add or modify GitHub-specific files (e.g., `.github/workflows/`) in `main` without affecting existing file locations.

      3. **Backend API Endpoints (All Fully Functional with Real Data):**  
         - **Base URL:** `http://127.0.0.1:7860/api` (local) / `https://your-domain.com/api` (production)—implement these in scripts.  
         - **Endpoints (located in `./web_server.py`, 773 lines):**  
           - `/api/models/load` (POST): Load real Persian BERT models.  
           - `/api/models/status` (GET): Real model health.  
           - `/api/documents/process` (POST): Real-time processing.  
           - `/api/documents/search` (POST): Real full-text search.  
           - `/api/documents/semantic-search` (POST): Real semantic search.  
           - `/api/documents/nafaqe-search` (POST): Real family law search.  
           - `/api/proxies/status` (GET): Real proxy health.  
           - `/api/system/metrics` (GET): Real system metrics.  
         - Implement Pydantic validation and CORS:  
           ```python
           app.add_middleware(
               CORSMiddleware,
               allow_origins=["*"],
               allow_credentials=True,
               allow_methods=["*"],
               allow_headers=["*"]
           )
           ```

      4. **Core Functional Requirements (Fully Implemented to Resolve Compare
      and Merge Issue):**  
         - **Diagnose and Fix Compare and Merge Functionality:**  
           - Identify the cause of the non-responsive "Compare and Merge" action (e.g., branch protection rules, missing pull request triggers, workflow errors).  
           - Ensure the `main` branch is properly configured in the GitHub repository settings to allow merges from `gh-pages` or other branches if needed.  
           - Update the `.github/workflows/deploy.yml` file in `main` to support comparison and merging:  
             ```yaml
             name: Deploy to GitHub Pages with Compare and Merge
             on:
               push:
                 branches: [main]
               pull_request:
                 branches: [main, gh-pages]
             jobs:
               build-and-deploy:
                 runs-on: ubuntu-latest
                 steps:
                   - uses: actions/checkout@v3
                   - uses: actions/setup-node@v3
                     with:
                       node-version: '18'
                   - run: npm install
                   - run: npm run build
                   - run: |
                       touch dist/.nojekyll
                       cp public/404.html dist/
                   - name: Deploy
                     uses: peaceiris/actions-gh-pages@v3
                     with:
                       github_token: ${{ secrets.GITHUB_TOKEN }}
                       publish_dir: ./dist
                       publish_branch: gh-pages
                       allow_empty_commit: true
             ```  
           - Add a pull request check to validate changes before merging:  
             ```yaml
             jobs:
               check-pr:
                 runs-on: ubuntu-latest
                 steps:
                   - uses: actions/checkout@v3
                   - run: npm install
                   - run: npm run lint
                   - run: npm run test
             ```  
         - **Branch Integration with GitHub Pages:**  
           - Ensure `main` is the primary branch, with automatic deployment to `gh-pages`.  
           - Update `vite.config.js` to reflect `base: '/Aihoghoghi/'`:  
             ```javascript
             export default defineConfig({
                 base: '/Aihoghoghi/',
                 build: {
                     rollupOptions: {
                         output: {
                             assetFileNames: 'assets/[name]-[hash][extname]',
                             manualChunks: {
                                 vendor: ['react', 'react-dom'],
                                 router: ['react-router-dom'],
                                 query: ['@tanstack/react-query'],
                                 ui: ['framer-motion', 'lucide-react']
                             }
                         }
                     }
                 }
             });
             ```  
           - Include a `404.html` redirect script in `dist/`:  
             ```html
             <script>
             (function() {
                 var l = window.location;
                 var basePath = '/Aihoghoghi/';
                 var requestedRoute = l.pathname.replace(basePath, '');
                 var redirectUrl = l.protocol + '//' + l.hostname + basePath + '#/' + requestedRoute;
                 if (l.search) redirectUrl += l.search;
                 l.replace(redirectUrl);
             })();
             </script>
             ```  
         - **Main Tabs and Sub-Tabs (All Fully Functional):**  
           - **Dashboard:** Real-time metrics with "بروزرسانی متریک‌ها" button.  
           - **Search:** Sub-tabs Text Search, Semantic Search, Nafaqe Search with real results.  
           - **Scraping:** Sub-sections URL Input, File Upload, Proxy Selection with "شروع استخراج" button.  
           - **AI Analysis:** Sub-sections Classification, NER, Sentiment, Summarization with real scores.  
           - **Settings:** Sub-sections API Configuration, Proxy Settings with "تست اتصال" and "ذخیره تنظیمات" buttons.  
         - **System Status, Model Management, API Settings, Proxy Management, Document Processing, Data Preview:** All fully functional with real data.

      5. **Initialization Sequence (Fully Functional):**  
         - Implement in `<script>` for simultaneous execution:  
           ```javascript
           window.addEventListener('load', async function() {
               showLoading('در حال راه‌اندازی سیستم...');
               try {
                   const backendInit = await fetch('http://127.0.0.1:7860/api/system/init', { method: 'POST', headers: {'Content-Type': 'application/json'} });
                   const initData = await backendInit.json();
                   await Promise.all([
                       systemIntegration.initialize(),
                       enhancedAIService.loadModels(),
                       proxyManager.initializeProxies(),
                       legalDocumentService.connectDatabase(),
                       realTimeMetricsService.initialize()
                   ]);
                   connectWebSocket('wss://your-domain.com/ws');
                   const initialData = await loadInitialData();
                   updateRealTimeMetrics(initialData.metrics);
                   showToast('سیستم با موفقیت راه‌اندازی شد: ' + initData.status, 'success');
               } catch (error) {
                   console.error('Initialization error:', error);
                   showToast('خطا در راه‌اندازی سیستم: ' + error.message, 'error');
               } finally {
                   hideLoading();
               }
           });
           ```

      6. **Real-Time WebSocket (Fully Operational):**  
         - Use `wss://your-domain.com/ws` with reconnection and polling fallback.

      7. **UI/UX Requirements (Fully Functional):**  
         - Embed CSS in `<style>` (Tailwind with Framer Motion). External: Chart.js, Font Awesome, Vazirmatn Font.  
         - Responsive RTL design, real loading states.

      8. **Deployment & Testing:**  
         - Ensure deployment uses GitHub Pages via the updated `.github/workflows/deploy.yml`.  
         - Write Vitest tests for 90% coverage, including tests for merge functionality.

      9. **Performance & Security:**  
         - Optimize load time, bundle size, with security headers and rate limiting.

      10. **Preservation & Validation:**  
          - Preserve all existing `main` branch files in their current locations; validate all elements, including "Compare and Merge" functionality, work with real data, no errors.

      **Output Instructions:**  

      - Deliver only the updated `dist/index.html` code, fully resolving the
      "Compare and Merge" issue with GitHub Pages deployment from `main`. Await
      further commands.


      ---


      ### Steps to Take Manually (if Needed):

      If the issue persists after this update, consider the following manual
      actions while awaiting the agent's output:

      1. **Check Repository Settings:** Ensure branch protection rules on `main`
      allow merges and that `gh-pages` is correctly set as the publish branch in
      GitHub Pages settings.

      2. **Verify Workflow Logs:** Review the GitHub Actions logs for
      `deploy.yml` to identify specific errors.

      3. **Test Merge Locally:** Use `git checkout main`, `git pull`, `git
      checkout gh-pages`, `git pull`, `git checkout main`, and `git merge
      gh-pages` to test merging manually, then push to trigger the workflow.

      4. **Retry After Delay:** If a rate limit or API issue is suspected, wait
      a few minutes and retry the merge action.


      This prompt should resolve the non-responsive "Compare and Merge" issue by
      enhancing the GitHub workflow and repository configuration, while
      maintaining all existing functionality with real data.
model: openai/gpt-4o
