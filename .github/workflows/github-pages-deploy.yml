name: Deploy React App to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_ENV: production
  GITHUB_PAGES: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies with npm ci..."
          npm ci --prefer-offline --no-audit

      - name: Build project
        run: |
          echo "🏗️ Building React/Vite project for production..."
          
          # Clean previous builds
          rm -rf dist/
          
          # Build with production optimizations
          npm run build
          
          # Verify build output
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Build failed - index.html not found"
            exit 1
          fi
          
          echo "✅ Build completed successfully"

      - name: Prepare for GitHub Pages
        run: |
          echo "🔧 Preparing build for GitHub Pages deployment..."
          
          # Create .nojekyll file to prevent Jekyll processing
          touch dist/.nojekyll
          
          # Copy 404.html for SPA routing support
          if [ -f "public/404.html" ]; then
            cp public/404.html dist/
            echo "✅ Copied 404.html for SPA routing"
          fi
          
          # Copy manifest.json if not already copied
          if [ -f "public/manifest.json" ] && [ ! -f "dist/manifest.json" ]; then
            cp public/manifest.json dist/
            echo "✅ Copied manifest.json"
          fi
          
          # Add security headers
          if [ ! -f "dist/_headers" ]; then
            cat > dist/_headers << 'EOF'
/*
  X-Frame-Options: DENY
  X-Content-Type-Options: nosniff
  Referrer-Policy: strict-origin-when-cross-origin
  Permissions-Policy: camera=(), microphone=(), geolocation=()

/assets/*
  Cache-Control: public, max-age=31536000, immutable

/*.html
  Cache-Control: public, max-age=3600

/manifest.json
  Cache-Control: public, max-age=86400

/sw.js
  Cache-Control: public, max-age=0, must-revalidate
EOF
            echo "✅ Added security headers"
          fi
          
          # Display build statistics
          echo "📊 Build Statistics:"
          echo "   Total files: $(find dist -type f | wc -l)"
          echo "   Total size: $(du -sh dist | cut -f1)"
          echo "   JS bundles: $(find dist/assets -name "*.js" 2>/dev/null | wc -l)"
          echo "   CSS files: $(find dist/assets -name "*.css" 2>/dev/null | wc -l)"
          
          # Verify critical files
          echo "📋 Critical files verification:"
          [ -f "dist/index.html" ] && echo "✅ index.html exists" || echo "❌ index.html missing"
          [ -f "dist/404.html" ] && echo "✅ 404.html exists" || echo "❌ 404.html missing"
          [ -f "dist/.nojekyll" ] && echo "✅ .nojekyll exists" || echo "❌ .nojekyll missing"
          [ -f "dist/manifest.json" ] && echo "✅ manifest.json exists" || echo "❌ manifest.json missing"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          commit_message: "🚀 Deploy Iranian Legal Archive - ${{ github.event.head_commit.message }}"
          cname: false

      - name: Deployment Success Notification
        run: |
          echo "🎉 DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "================================="
          echo "📱 Application URL: https://aminchedo.github.io/Aihoghoghi/"
          echo "🔧 Optimized for Iranian users with fast loading"
          echo "✅ SPA routing configured with 404.html"
          echo "✅ RTL and Persian font support enabled"
          echo "✅ Security headers configured"
          echo "✅ PWA manifest included"
          echo "✅ Service worker for offline support"
          echo ""
          echo "🔗 Available Routes:"
          echo "   - /dashboard (Main dashboard)"
          echo "   - /search (Search database)"
          echo "   - /scraping (Scraping dashboard)"
          echo "   - /ai-analysis (AI analysis)"
          echo "   - /database (Database management)"
          echo "   - /settings (Settings panel)"