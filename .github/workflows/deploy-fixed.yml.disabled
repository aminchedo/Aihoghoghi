name: Deploy to GitHub Pages (Fixed)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_ENV: production
  GITHUB_PAGES: true

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci --prefer-offline --no-audit

      - name: Build project with optimizations
        run: |
          echo "🏗️ Building optimized React frontend..."
          
          # Clean previous builds
          rm -rf dist/
          
          # Build with production optimizations
          npm run build
          
          # Verify build output
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Build failed - index.html not found"
            exit 1
          fi
          
          echo "✅ Build completed successfully"
          
          # Create .nojekyll file for GitHub Pages
          touch dist/.nojekyll
          
          # Copy 404.html for SPA routing
          if [ -f "public/404.html" ]; then
            cp public/404.html dist/
          fi
          
          # Optimize for GitHub Pages
          echo "🔧 Optimizing for GitHub Pages..."
          
          # Ensure all paths are correctly prefixed
          find dist -name "*.html" -exec sed -i 's|="/assets/|="/Aihoghoghi/assets/|g' {} \; 2>/dev/null || true
          find dist -name "*.html" -exec sed -i 's|="/manifest.json|="/Aihoghoghi/manifest.json|g' {} \; 2>/dev/null || true
          
          # Add cache busting and performance headers
          cat > dist/_headers << EOF
          /*
            X-Frame-Options: DENY
            X-Content-Type-Options: nosniff
            Referrer-Policy: strict-origin-when-cross-origin
            Permissions-Policy: camera=(), microphone=(), geolocation=()

          /assets/*
            Cache-Control: public, max-age=31536000, immutable

          /*.html
            Cache-Control: public, max-age=3600

          /manifest.json
            Cache-Control: public, max-age=86400

          /sw.js
            Cache-Control: public, max-age=0, must-revalidate
          EOF
          
          # Display build statistics
          echo "📊 Build Statistics:"
          echo "   Total files: $(find dist -type f | wc -l)"
          echo "   Total size: $(du -sh dist | cut -f1)"
          echo "   JS bundles: $(find dist/assets -name "*.js" | wc -l)"
          echo "   CSS files: $(find dist/assets -name "*.css" | wc -l)"
          
          # List critical files
          echo "📋 Critical files check:"
          [ -f "dist/index.html" ] && echo "✅ index.html exists" || echo "❌ index.html missing"
          [ -f "dist/404.html" ] && echo "✅ 404.html exists" || echo "❌ 404.html missing"
          [ -f "dist/.nojekyll" ] && echo "✅ .nojekyll exists" || echo "❌ .nojekyll missing"
          [ -f "dist/manifest.json" ] && echo "✅ manifest.json exists" || echo "❌ manifest.json missing"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Display deployment info
        run: |
          echo "🎉 DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "================================="
          echo "📱 Main Application: ${{ steps.deployment.outputs.page_url }}"
          echo "🔧 Optimized for Iranian users with fast loading"
          echo "✅ Fixed infinite loading issue"
          echo "✅ Optimized asset loading"
          echo "✅ SPA routing configured"
          echo "✅ RTL and Persian support enabled"